#!groovy

notifyBuildDetails = ""

try {
    switch (env.BRANCH_NAME) {
        case ~/master/: 
            branch = "master";
            break;
        case ~/jenkins-dev/:
            branch = "dev";
            break;
        default: 
            branch = "dev";
    }
    notifyBuild('STARTED', 'Using branch ' + env.BRANCH_NAME);
    node("debian") {
        stage("Debian Build") {
            sh """
                wget --no-check-certificate -nv -O /home/builder/qt_static.tar.gz 'https://masterbazaar.subutai.io/rest/v1/cdn/raw?name=qt_static.tar.gz&latest&download' && tar -xf /home/builder/qt_static.tar.gz -C /home/builder/
                wget --no-check-certificate -nv -O /home/travis/build/subutai-io/control-center/libs.tar.gz 'https://masterbazaar.subutai.io/rest/v1/cdn/raw?name=libs.tar.gz&latest&download' && tar -xf libs.tar.gz
                """;
        }
    }
} catch (e) { 
    currentBuild.result = "FAILED"
        throw e
} finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result, notifyBuildDetails)
}

def notifyBuild(String buildStatus = 'STARTED', String details = '') {
    // build status of null means successful
    buildStatus = buildStatus ?: 'SUCCESSFUL'
        // Default values
        def colorName = 'RED'
        def colorCode = '#FF0000'
        def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
        def summary = "${subject} (${env.BUILD_URL})"

        // Override default values based on build status
        if (buildStatus == 'STARTED') {
            color = 'YELLOW'
                colorCode = '#FFFF00'  
        } else if (buildStatus == 'SUCCESSFUL') {
            color = 'GREEN'
                colorCode = '#00FF00'
        } else {
            color = 'RED'
                colorCode = '#FF0000'
                summary = "${subject} (${env.BUILD_URL})${details}"
        }
    def mattermost_rest = "https://mm.subutai.io/hooks/k1ujhg8xwigupxjzqbwzpgdp3h";
    mattermostSend(color: colorCode, icon: "https://jenkins.io/images/logos/jenkins/jenkins.png", message: summary, channel: "#sysnet-bots", endpoint: "${mattermost_rest}" )
}
